package com.losporocas.estagiagil.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.losporocas.estagiagil.dto.AlunoDTO;
import com.losporocas.estagiagil.mapper.AlunoDTOMapper;
import com.losporocas.estagiagil.model.Aluno;
import com.losporocas.estagiagil.model.Coordenador;
import com.losporocas.estagiagil.repositories.AlunoRepository;
import com.losporocas.estagiagil.repositories.CoordenadorRepository;
import com.losporocas.estagiagil.services.AlunoService;
import com.losporocas.estagiagil.services.CoordenadorService;

import javassist.tools.rmi.ObjectNotFoundException;

@RestController
@RequestMapping(value = "/coordenador")
public class CoordenadorController {

	@Autowired
	private CoordenadorRepository coordenadorRepository;
	@Autowired
	private AlunoDTOMapper alunoDTOMapper;
	
	@GetMapping(value = "/allAlunos")
	public ResponseEntity<List<AlunoDTO>> findAll(){
		List<AlunoDTO> result = alunoRepository.findAll();		
		return ResponseEntity.ok(result);
	}
	/*
	@PostMapping(value = "/{matricula}")
	public List<AlunoDTO> findAll(@PathVariable String matricula){
		Coordenador result = repository.findByMatricula(matricula);		
		return alunoDTOMapper.toAlunoDTO(result.getAlunos());
	}
	*/
	
	/*
	@DeleteMapping(value = "/{matricula}/{matricula}")
	public List<AlunoDTO> deleteAluno(@PathVariable String matricula){
		Coordenador result = repository.deleteByMatricula(matricula);		
		return alunoDTOMapper.deleteToAlunoDTO(result.getAlunos(), matricula);
	}*/
	
	@Autowired
	private CoordenadorService cs;
	
	//lembrar de tirar dps
	@Autowired
	private AlunoRepository alunoRepository;

	//@GetMapping
	//public List<AlunoDTO> findAll(){
	//	List<Aluno> result = alunoRepository.findAll();
	//	return alunoDTOMapper.getAlunoDTOList(result);
	//}

	@GetMapping(value = "/{matricula}")
	public ResponseEntity<Aluno> findByMatricula(@PathVariable String matricula) throws ObjectNotFoundException{
		Aluno result = cs.findByMatricula(matricula);
		return ResponseEntity.ok().body(result);
	}
	
	
}
